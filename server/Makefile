# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x64)
  mcoptions_server_config = debug_x64
  mcoptions_client_config = debug_x64

else ifeq ($(config),release_x64)
  mcoptions_server_config = release_x64
  mcoptions_client_config = release_x64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := mcoptions_server mcoptions_client

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

mcoptions_server:
ifneq (,$(mcoptions_server_config))
	@echo "==== Building mcoptions_server ($(mcoptions_server_config)) ===="
	@${MAKE} --no-print-directory -C . -f mcoptions_server.make config=$(mcoptions_server_config)
endif

mcoptions_client:
ifneq (,$(mcoptions_client_config))
	@echo "==== Building mcoptions_client ($(mcoptions_client_config)) ===="
	@${MAKE} --no-print-directory -C . -f mcoptions_client.make config=$(mcoptions_client_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f mcoptions_server.make clean
	@${MAKE} --no-print-directory -C . -f mcoptions_client.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x64"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   mcoptions_server"
	@echo "   mcoptions_client"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"